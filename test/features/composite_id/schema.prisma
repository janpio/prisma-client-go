datasource db {
  provider = "postgresql"
  url      = env("__REPLACE__")
}

generator db {
  provider          = "go run github.com/steebchen/prisma-client-go"
  output            = "."
  disableGoBinaries = true
  package           = "db"
}

model Organization {
  platformId   String
  platformKind String

  name String

  repositories Repository[]

  @@id(name: "organizationId", [platformKind, platformId])
  @@map("organizations")
}

model Repository {
  platformId   String
  platformKind String

  orgId String?       @map("org_id")
  org   Organization? @relation(fields: [platformKind, orgId], references: [platformKind, platformId])

  @@id(name: "repositoryId", [platformKind, platformId])
  @@map("repositories")
}

model Company {
  id     String   @id
  name   String
  image  String?
  access Access[]
}

model Access {
  company_relation Company @relation(fields: [company_id], references: [id])
  company_id       String

  email String

  @@id([company_id, email])
}

model Team {
  path     String     @id
  name     String
  image    String?
  document Document[]
}

model Document {
  team_relation Team   @relation(fields: [team_path], references: [path])
  team_path     String

  parent    Document?  @relation("subfolder", fields: [parent_id], references: [id], onDelete: Cascade)
  child     Document[] @relation("subfolder")
  parent_id String?

  id String @id @default(cuid())

  name String
  type String

  @@unique([team_path, parent_id, name])
  @@unique([id, team_path])
}
